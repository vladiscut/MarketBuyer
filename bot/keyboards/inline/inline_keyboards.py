from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils.callbackdata import *
import pandas as pd

def del_cart_product(goods, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    for i in range(len(goods)):
        ikb.button(text = str(goods['–ù–∞–∏–º–µ–Ω–æ–≤–Ω–∏–µ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É'][i]),
                   callback_data=DelCartProduct(id=str(goods['–ê—Ä—Ç–∏–∫—É–ª'][i])))
    ikb.button(text = "–ö –∫–æ—Ä–∑–∏–Ω–µ",callback_data='–ö –∫–æ—Ä–∑–∏–Ω–µ')
    ikb.adjust(*row_width)
    return ikb.as_markup()

def shipments_buttons(goods):
    ikb = InlineKeyboardBuilder()
    for i in range(len(goods)):
        ikb.button(text = str(goods['–ù–∞–∏–º–µ–Ω–æ–≤–Ω–∏–µ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É'][i]),
                   callback_data=str(goods['–ê—Ä—Ç–∏–∫—É–ª'][i]))
    ikb.button(text = "–û—Ç–º–µ–Ω–∏—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ",callback_data='–û—Ç–º–µ–Ω–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è')
    ikb.adjust(1)
    return ikb.as_markup()

def three_inline_buttons(list_but:list, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    for b in list_but:
        ikb.button(text = str(b),callback_data=str(b))
    ikb.adjust(*row_width)
    return ikb.as_markup()

def category_buttons(list_but:list, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    ikb.button(text = 'üõí –ö–æ—Ä–∑–∏–Ω–∞', callback_data='–ö–æ—Ä–∑–∏–Ω–∞')
    ikb.button(text = '‚≠êÔ∏è –û –Ω–∞—Å', callback_data='–û –Ω–∞—Å')
    ikb.button(text = '‚ù§Ô∏è –ò–∑–±—Ä–∞–Ω–Ω–æ–µ', callback_data='–ò–∑–±—Ä–∞–Ω–Ω—ã–µ')
    ikb.button(text = 'üì¶ –ó–∞–∫–∞–∑—ã', callback_data='checkuserorder')
    for b in list_but:
        ikb.button(text = str(b),callback_data=Category(name=str(b)[:28]))
    ikb.button(text = 'üôé‚Äç‚ôÄÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/ManagerMarketBuyer_bot')    
    ikb.adjust(*row_width)
    return ikb.as_markup()

def subcategory_buttons(list_but:list, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    for b in list_but:
        ikb.button(text = str(b),callback_data=Subcat(name=str(b)[:28]))
    ikb.button(text = "–û–±—Ä–∞—Ç–Ω–æ üîô",callback_data='–û–±—Ä–∞—Ç–Ω–æ')
    ikb.adjust(*row_width)
    return ikb.as_markup()

def product_buttons(goods:pd.DataFrame, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    for i in range(len(goods)):
        ikb.button(text = str(goods['–ù–∞–∏–º–µ–Ω–æ–≤–Ω–∏–µ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É'][i]),
                   callback_data=Product(id=str(goods['–ê—Ä—Ç–∏–∫—É–ª'][i])))
    ikb.button(text = "–û–±—Ä–∞—Ç–Ω–æ üîô",callback_data='–û–±—Ä–∞—Ç–Ω–æ')
    ikb.adjust(*row_width)
    return ikb.as_markup()

def favs_buttons(goods:pd.DataFrame, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    for i in range(len(goods)):
        ikb.button(text = str(goods['–ù–∞–∏–º–µ–Ω–æ–≤–Ω–∏–µ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É'][i]),
                   callback_data=Product(id=str(goods['–ê—Ä—Ç–∏–∫—É–ª'][i])))
    ikb.button(text = "–ò–∑–º–µ–Ω–∏—Ç—å üîß",callback_data='–ò–∑–º–µ–Ω–∏—Ç—å')
    ikb.button(text = "–ö –∫–∞—Ç–∞–ª–æ–≥—É üìñ",callback_data='–ö –∫–∞—Ç–∞–ª–æ–≥—É')
    ikb.adjust(*row_width)
    return ikb.as_markup()

def del_favs_product(goods, row_width:tuple):
    ikb = InlineKeyboardBuilder()
    for i in range(len(goods)):
        ikb.button(text = str(goods['–ù–∞–∏–º–µ–Ω–æ–≤–Ω–∏–µ –ø–æ –∫–∞—Ç–∞–ª–æ–≥—É'][i]),
                   callback_data=DelFavsProduct(id=str(goods['–ê—Ä—Ç–∏–∫—É–ª'][i])))
    ikb.button(text = "–ö –∏–∑–±—Ä–∞–Ω–Ω–æ–º—É",callback_data='–ò–∑–±—Ä–∞–Ω–Ω—ã–µ')
    ikb.adjust(*row_width)
    return ikb.as_markup()

def product_detail_buttons(good:pd.DataFrame, weight:float, sumprice:float, cart_exist:bool):
    ikb = InlineKeyboardBuilder()
    volume = good.reset_index(drop=True)['–û–±—ä–µ–º'][0]
    itemid = good.reset_index(drop=True)['–ê—Ä—Ç–∏–∫—É–ª'][0]
    ikb.button(text = '-',callback_data=DelProduct(id=itemid, weight=weight,sumprice=sumprice))
    ikb.button(text = str(round(weight,2))+' '+str(volume) ,callback_data='weight')
    ikb.button(text = '+',callback_data=AddProduct(id=itemid, weight=weight,sumprice=sumprice))
    ikb.button(text = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É –∑–∞ {}‚ÇΩ'.format(sumprice),callback_data=AddCart(id=itemid, weight=weight,sumprice=sumprice))
    ikb.button(text = '–í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ',callback_data=AddFav(id=itemid))
    ikb.button(text = "–û–±—Ä–∞—Ç–Ω–æ üîô",callback_data='–û–±—Ä–∞—Ç–Ω–æ')
    if cart_exist:
        ikb.button(text = "–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É",callback_data='gocart')
    ikb.adjust(3,1,1,2)
    return ikb.as_markup()

    # if cart_exist:
    #     ib6_azer = InlineKeyboardButton (text = '–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–æ—Ä–∑–∏–Ω—É'.format(weight, price),callback_data='cart')
    #     ikb_azer.add(ib1_azer,ib2_azer,ib3_azer).add(ib6_azer,ib4_azer).add(ib5_azer)
    # else:
    ikb_azer.add(ib1_azer,ib2_azer,ib3_azer).add(ib4_azer).add(ib5_azer)

    return ikb_azer